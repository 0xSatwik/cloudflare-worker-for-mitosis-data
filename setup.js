const fs = require('fs');
const { execSync } = require('child_process');

async function main() {
  // Create D1 database
  console.log('Creating D1 database...');
  const createDbOutput = execSync('npx wrangler d1 create mitosis_data').toString();
  console.log(createDbOutput);

  // Extract database ID from output
  const dbIdMatch = createDbOutput.match(/database_id\s*=\s*"([^"]+)"/);
  if (!dbIdMatch) {
    console.error('Failed to extract database ID');
    return;
  }

  const dbId = dbIdMatch[1];
  console.log(`Database ID: ${dbId}`);

  // Update wrangler.toml with the actual database ID
  let wranglerConfig = fs.readFileSync('wrangler.toml', 'utf8');
  wranglerConfig = wranglerConfig.replace(/database_id = "placeholder"/, `database_id = "${dbId}"`);
  fs.writeFileSync('wrangler.toml', wranglerConfig);

  // Check if the d1_import.sql file exists (generated by Python script)
  if (!fs.existsSync('d1_import.sql')) {
    console.error('d1_import.sql file not found. Please run the process_csv.py script first.');
    return;
  }

  // Import the SQL data into D1
  console.log('Importing SQL data into D1...');
  
  // Split the file into smaller chunks if needed
  const sql = fs.readFileSync('d1_import.sql', 'utf8');
  const sqlChunks = sql.split('-- Batch');

  // Process the first chunk (table creation)
  fs.writeFileSync('schema.sql', sqlChunks[0]);
  execSync('npx wrangler d1 execute mitosis_data --file=schema.sql');
  console.log('Schema created successfully');

  // Process the data chunks
  for (let i = 1; i < sqlChunks.length; i++) {
    console.log(`Processing batch ${i} of ${sqlChunks.length - 1}...`);
    fs.writeFileSync(`batch${i}.sql`, `-- Batch${sqlChunks[i]}`);
    try {
      execSync(`npx wrangler d1 execute mitosis_data --file=batch${i}.sql`);
      console.log(`Batch ${i} imported successfully`);
    } catch (error) {
      console.error(`Error importing batch ${i}: ${error.message}`);
    }
    fs.unlinkSync(`batch${i}.sql`);
  }
  
  // Clean up
  fs.unlinkSync('schema.sql');
  
  console.log('Database setup complete!');
}

main().catch(console.error); 